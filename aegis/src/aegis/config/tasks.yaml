research_task:
  description: >
    Conduct a comprehensive research on {topic}, focusing on the most credible and recent sources available as of 2024. 
    Gather insights that reflect current trends, developments, and noteworthy facts. 
    Avoid outdated data, and cross-reference sources for accuracy.
  expected_output: >
    A list of 25 bullet points containing the most relevant, current, and credible information on {topic}, 
    organized by importance and categorized by themes if applicable.
  agent: researcher


content_planning_task:
  description: >
    Create an outline for a comprehensive blog on {topic}, using the research findings. 
    Break down the article into detailed sections as you best understand. Include potential areas 
    for detailed code snippets where applicable. Suggest real-world analogies and connections to 
    relatable scenarios to enhance understanding and engagement. Aim for an outline that supports a lengthy, in-depth article.
  expected_output: >
    A comprehensive outline with at least 6-8 major sections, each with sub-sections as needed. 
    Include proposed areas for code snippets, visuals, and real-world analogies to support each section theme.
  agent: content_planner


content_expansion_task:
  description: >
    Use the data obtained from Senior Data Researcher and group them into sections which are created by the 
    content planner. Then, rewrite and expand each section with a MINIMUM OF 300 WORDS, and elaborate on key concepts 
    with details that keep readers informed and engaged. Review each expanded section for cohesion and alignment with 
    the overall blog structure, ensuring that it flows logically. Also ensure to explain terms and jargons in new paragraphs 
    as necessary. Look for opportunities to add relatable examples, case studies, or analogies to make the information more approachable.
  expected_output: >
    A comprehensive, factually correct expansion of each blog section, ready for the Storyline Generator to add narrative elements.
  agent: content_expander


code_enhancer_task:
  description: >
    Review the content provided by the Content Expander to identify sections where code examples 
    can clarify or support key concepts. Insert appropriate code snippets based on the context, ensuring each example is 
    relevant and easy to understand. Add comments within the code to explain each step, making it accessible even to less 
    experienced readers. If relevant provide code examples in Java and Python.
  expected_output: >
    A blog article enhanced with clear, well-commented code snippets where necessary, ready for the Blog Formatter to finalize with HTML structure and styling.
  agent: code_enhancer


content_flow_review_task:
  description: >
    Review the content provided by the Code Enhancer for abrupt transitions or gaps. 
    Add or refine transitional phrases to connect sections smoothly. Ensure a consistent tone and 
    style, making minor adjustments for a uniform voice. ENSURE TO KEEP CHANGES SUBTLE.
  expected_output: >
    A cohesive, smoothly flowing blog article with well-connected sections, ready for final formatting.
  agent: code_enhancer


html_formatting_task:
  description: >
    Format the content flow reviewed blog in HTML, applying <h3> tags for section headings, 
    and use bullet points (HTML Lists), bold (bold tags), and italicized text where appropriate for readability. 
    ENSURE TO REMOVE THE INITIAL PART OF HTML INCLUDING THE TITLE AND ONLY INCLUDE THE BODY PART IN THE CONTENT OF BLOG.
    ALSO ENSURE TO REMOVE NUMBERING TO SECTIONS, LET THEM BE ONLY TEXT.
  expected_output: >
    The blog article formatted in HTML, with headings, styling, and SEO elements integrated. 
    The content should be visually structured and optimized for online reading.
  agent: blog_formatter


blog_publishing_task:
  description: >
    Retrieve the formatted HTML blog content from the Blog Formatter and publish it to WordPress via the custom API tool. 
    Ensure that all required fields are correctly populated. Confirm the successful publishing of the article 
    and log the post URL and publication details.
  expected_output: >
    A success response from the WordPress API call, confirming the blog post is published. 
    Include the post URL and timestamp for tracking.
  agent: blog_publisher
